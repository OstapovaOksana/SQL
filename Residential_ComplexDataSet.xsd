<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="Residential_ComplexDataSet" targetNamespace="http://tempuri.org/Residential_ComplexDataSet.xsd" xmlns:mstns="http://tempuri.org/Residential_ComplexDataSet.xsd" xmlns="http://tempuri.org/Residential_ComplexDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="Residential_ComplexConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="Residential_ComplexConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.FlatRent.Properties.Settings.GlobalReference.Default.Residential_ComplexConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ClassTableAdapter" GeneratorDataComponentClassName="ClassTableAdapter" Name="Class" UserDataComponentName="ClassTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="Residential_ComplexConnectionString (Settings)" DbObjectName="Residential_Complex.dbo.Class" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Class] WHERE (([Class_ID] = @Original_Class_ID) AND ([Name] = @Original_Name))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Class_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Class_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Class] ([Name]) VALUES (@Name);
SELECT Class_ID, Name FROM Class WHERE (Class_ID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Class_ID, Name FROM dbo.Class</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Class] SET [Name] = @Name WHERE (([Class_ID] = @Original_Class_ID) AND ([Name] = @Original_Name));
SELECT Class_ID, Name FROM Class WHERE (Class_ID = @Class_ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Class_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Class_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Class_ID" ColumnName="Class_ID" DataSourceName="Residential_Complex.dbo.Class" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Class_ID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Class_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Class_ID" DataSetColumn="Class_ID" />
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="FlatsTableAdapter" GeneratorDataComponentClassName="FlatsTableAdapter" Name="Flats" UserDataComponentName="FlatsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="Residential_ComplexConnectionString (Settings)" DbObjectName="Residential_Complex.dbo.Flats" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Flats] WHERE (([Flats_ID] = @Original_Flats_ID) AND ([Number] = @Original_Number) AND ((@IsNull_GK_ID = 1 AND [GK_ID] IS NULL) OR ([GK_ID] = @Original_GK_ID)) AND ([Square] = @Original_Square) AND ([Price] = @Original_Price) AND ([Floor] = @Original_Floor))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Flats_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Flats_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Number" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Number" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_GK_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GK_ID" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_GK_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GK_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Original_Square" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="Square" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Original_Price" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="Price" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Floor" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Floor" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Flats] ([Number], [GK_ID], [Square], [Price], [Floor]) VALUES (@Number, @GK_ID, @Square, @Price, @Floor);
SELECT Flats_ID, Number, GK_ID, Square, Price, Floor FROM Flats WHERE (Flats_ID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Number" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Number" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@GK_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GK_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Square" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="Square" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Price" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="Price" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Floor" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Floor" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Flats_ID, Number, GK_ID, Square, Price, Floor FROM dbo.Flats</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Flats] SET [Number] = @Number, [GK_ID] = @GK_ID, [Square] = @Square, [Price] = @Price, [Floor] = @Floor WHERE (([Flats_ID] = @Original_Flats_ID) AND ([Number] = @Original_Number) AND ((@IsNull_GK_ID = 1 AND [GK_ID] IS NULL) OR ([GK_ID] = @Original_GK_ID)) AND ([Square] = @Original_Square) AND ([Price] = @Original_Price) AND ([Floor] = @Original_Floor));
SELECT Flats_ID, Number, GK_ID, Square, Price, Floor FROM Flats WHERE (Flats_ID = @Flats_ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Number" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Number" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@GK_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GK_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Square" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="Square" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Price" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="Price" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Floor" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Floor" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Flats_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Flats_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Number" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Number" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_GK_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GK_ID" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_GK_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GK_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Original_Square" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="Square" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Original_Price" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="Price" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Floor" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Floor" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Flats_ID" ColumnName="Flats_ID" DataSourceName="Residential_Complex.dbo.Flats" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Flats_ID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Flats_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Flats_ID" DataSetColumn="Flats_ID" />
              <Mapping SourceColumn="Number" DataSetColumn="Number" />
              <Mapping SourceColumn="GK_ID" DataSetColumn="GK_ID" />
              <Mapping SourceColumn="Square" DataSetColumn="Square" />
              <Mapping SourceColumn="Price" DataSetColumn="Price" />
              <Mapping SourceColumn="Floor" DataSetColumn="Floor" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="GKTableAdapter" GeneratorDataComponentClassName="GKTableAdapter" Name="GK" UserDataComponentName="GKTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="Residential_ComplexConnectionString (Settings)" DbObjectName="Residential_Complex.dbo.GK" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[GK] WHERE (([GK_ID] = @Original_GK_ID) AND ([Name] = @Original_Name) AND ([Floors] = @Original_Floors) AND ([Parking] = @Original_Parking) AND ([Address] = @Original_Address) AND ((@IsNull_Class_ID = 1 AND [Class_ID] IS NULL) OR ([Class_ID] = @Original_Class_ID)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_GK_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GK_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Floors" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Floors" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Parking" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Parking" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Address" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Address" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Class_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Class_ID" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Class_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Class_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[GK] ([Name], [Floors], [Parking], [Address], [Class_ID]) VALUES (@Name, @Floors, @Parking, @Address, @Class_ID);
SELECT GK_ID, Name, Floors, Parking, Address, Class_ID FROM GK WHERE (GK_ID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Floors" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Floors" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Parking" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Parking" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Address" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Address" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Class_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Class_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT GK_ID, Name, Floors, Parking, Address, Class_ID FROM dbo.GK</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[GK] SET [Name] = @Name, [Floors] = @Floors, [Parking] = @Parking, [Address] = @Address, [Class_ID] = @Class_ID WHERE (([GK_ID] = @Original_GK_ID) AND ([Name] = @Original_Name) AND ([Floors] = @Original_Floors) AND ([Parking] = @Original_Parking) AND ([Address] = @Original_Address) AND ((@IsNull_Class_ID = 1 AND [Class_ID] IS NULL) OR ([Class_ID] = @Original_Class_ID)));
SELECT GK_ID, Name, Floors, Parking, Address, Class_ID FROM GK WHERE (GK_ID = @GK_ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Floors" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Floors" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Parking" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Parking" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Address" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Address" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Class_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Class_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_GK_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GK_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Floors" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Floors" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Parking" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Parking" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Address" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Address" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Class_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Class_ID" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Class_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Class_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="GK_ID" ColumnName="GK_ID" DataSourceName="Residential_Complex.dbo.GK" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@GK_ID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="GK_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="GK_ID" DataSetColumn="GK_ID" />
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
              <Mapping SourceColumn="Floors" DataSetColumn="Floors" />
              <Mapping SourceColumn="Parking" DataSetColumn="Parking" />
              <Mapping SourceColumn="Address" DataSetColumn="Address" />
              <Mapping SourceColumn="Class_ID" DataSetColumn="Class_ID" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="OwnersTableAdapter" GeneratorDataComponentClassName="OwnersTableAdapter" Name="Owners" UserDataComponentName="OwnersTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="Residential_ComplexConnectionString (Settings)" DbObjectName="Residential_Complex.dbo.Owners" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Owners] WHERE (([Owners_ID] = @Original_Owners_ID) AND ([Name] = @Original_Name) AND ([Phone] = @Original_Phone))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Owners_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Owners_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_Phone" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Phone" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Owners] ([Name], [Phone]) VALUES (@Name, @Phone);
SELECT Owners_ID, Name, Phone FROM Owners WHERE (Owners_ID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Phone" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Phone" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Owners_ID, Name, Phone FROM dbo.Owners</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Owners] SET [Name] = @Name, [Phone] = @Phone WHERE (([Owners_ID] = @Original_Owners_ID) AND ([Name] = @Original_Name) AND ([Phone] = @Original_Phone));
SELECT Owners_ID, Name, Phone FROM Owners WHERE (Owners_ID = @Owners_ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Phone" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Phone" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Owners_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Owners_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_Phone" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Phone" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Owners_ID" ColumnName="Owners_ID" DataSourceName="Residential_Complex.dbo.Owners" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Owners_ID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Owners_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Owners_ID" DataSetColumn="Owners_ID" />
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
              <Mapping SourceColumn="Phone" DataSetColumn="Phone" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="R_CompanyTableAdapter" GeneratorDataComponentClassName="R_CompanyTableAdapter" Name="R_Company" UserDataComponentName="R_CompanyTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="Residential_ComplexConnectionString (Settings)" DbObjectName="Residential_Complex.dbo.R_Company" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[R_Company] WHERE (([RC_ID] = @Original_RC_ID) AND ([Name] = @Original_Name) AND ([Director] = @Original_Director) AND ([Staff] = @Original_Staff) AND ([Phone] = @Original_Phone))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_RC_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="RC_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Director" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Director" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Staff" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Staff" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_Phone" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Phone" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[R_Company] ([Name], [Director], [Staff], [Phone]) VALUES (@Name, @Director, @Staff, @Phone);
SELECT RC_ID, Name, Director, Staff, Phone FROM R_Company WHERE (RC_ID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Director" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Director" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Staff" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Staff" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Phone" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Phone" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT RC_ID, Name, Director, Staff, Phone FROM dbo.R_Company</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[R_Company] SET [Name] = @Name, [Director] = @Director, [Staff] = @Staff, [Phone] = @Phone WHERE (([RC_ID] = @Original_RC_ID) AND ([Name] = @Original_Name) AND ([Director] = @Original_Director) AND ([Staff] = @Original_Staff) AND ([Phone] = @Original_Phone));
SELECT RC_ID, Name, Director, Staff, Phone FROM R_Company WHERE (RC_ID = @RC_ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Director" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Director" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Staff" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Staff" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Phone" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Phone" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_RC_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="RC_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Director" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Director" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Staff" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Staff" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_Phone" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Phone" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="RC_ID" ColumnName="RC_ID" DataSourceName="Residential_Complex.dbo.R_Company" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@RC_ID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="RC_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="RC_ID" DataSetColumn="RC_ID" />
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
              <Mapping SourceColumn="Director" DataSetColumn="Director" />
              <Mapping SourceColumn="Staff" DataSetColumn="Staff" />
              <Mapping SourceColumn="Phone" DataSetColumn="Phone" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="RealtorsTableAdapter" GeneratorDataComponentClassName="RealtorsTableAdapter" Name="Realtors" UserDataComponentName="RealtorsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="Residential_ComplexConnectionString (Settings)" DbObjectName="Residential_Complex.dbo.Realtors" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Realtors] WHERE (([Realtors_ID] = @Original_Realtors_ID) AND ([Name] = @Original_Name) AND ([Phone] = @Original_Phone))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Realtors_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Realtors_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_Phone" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Phone" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Realtors] ([Name], [Phone]) VALUES (@Name, @Phone);
SELECT Realtors_ID, Name, Phone FROM Realtors WHERE (Realtors_ID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Phone" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Phone" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Realtors_ID, Name, Phone FROM dbo.Realtors</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Realtors] SET [Name] = @Name, [Phone] = @Phone WHERE (([Realtors_ID] = @Original_Realtors_ID) AND ([Name] = @Original_Name) AND ([Phone] = @Original_Phone));
SELECT Realtors_ID, Name, Phone FROM Realtors WHERE (Realtors_ID = @Realtors_ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Phone" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Phone" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Realtors_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Realtors_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_Phone" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Phone" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Realtors_ID" ColumnName="Realtors_ID" DataSourceName="Residential_Complex.dbo.Realtors" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Realtors_ID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Realtors_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Realtors_ID" DataSetColumn="Realtors_ID" />
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
              <Mapping SourceColumn="Phone" DataSetColumn="Phone" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="StatusTableAdapter" GeneratorDataComponentClassName="StatusTableAdapter" Name="Status" UserDataComponentName="StatusTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="Residential_ComplexConnectionString (Settings)" DbObjectName="Residential_Complex.dbo.Status" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Status] WHERE (([Status_ID] = @Original_Status_ID) AND ([Name] = @Original_Name))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Status_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Status_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Status] ([Name]) VALUES (@Name);
SELECT Status_ID, Name FROM Status WHERE (Status_ID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Status_ID, Name FROM dbo.Status</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Status] SET [Name] = @Name WHERE (([Status_ID] = @Original_Status_ID) AND ([Name] = @Original_Name));
SELECT Status_ID, Name FROM Status WHERE (Status_ID = @Status_ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Status_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Status_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Status_ID" ColumnName="Status_ID" DataSourceName="Residential_Complex.dbo.Status" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Status_ID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Status_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Status_ID" DataSetColumn="Status_ID" />
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="Table_RealtorsTableAdapter" GeneratorDataComponentClassName="Table_RealtorsTableAdapter" Name="Table_Realtors" UserDataComponentName="Table_RealtorsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="Residential_ComplexConnectionString (Settings)" DbObjectName="Residential_Complex.dbo.Table_Realtors" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Table_Realtors] WHERE (([TR_ID] = @Original_TR_ID) AND ((@IsNull_Flats_ID = 1 AND [Flats_ID] IS NULL) OR ([Flats_ID] = @Original_Flats_ID)) AND ((@IsNull_Realtors_ID = 1 AND [Realtors_ID] IS NULL) OR ([Realtors_ID] = @Original_Realtors_ID)) AND ((@IsNull_RC_ID = 1 AND [RC_ID] IS NULL) OR ([RC_ID] = @Original_RC_ID)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TR_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TR_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Flats_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Flats_ID" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Flats_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Flats_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Realtors_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Realtors_ID" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Realtors_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Realtors_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_RC_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="RC_ID" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_RC_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="RC_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Table_Realtors] ([Flats_ID], [Realtors_ID], [RC_ID]) VALUES (@Flats_ID, @Realtors_ID, @RC_ID);
SELECT TR_ID, Flats_ID, Realtors_ID, RC_ID FROM Table_Realtors WHERE (TR_ID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Flats_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Flats_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Realtors_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Realtors_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@RC_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="RC_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT TR_ID, Flats_ID, Realtors_ID, RC_ID FROM dbo.Table_Realtors</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Table_Realtors] SET [Flats_ID] = @Flats_ID, [Realtors_ID] = @Realtors_ID, [RC_ID] = @RC_ID WHERE (([TR_ID] = @Original_TR_ID) AND ((@IsNull_Flats_ID = 1 AND [Flats_ID] IS NULL) OR ([Flats_ID] = @Original_Flats_ID)) AND ((@IsNull_Realtors_ID = 1 AND [Realtors_ID] IS NULL) OR ([Realtors_ID] = @Original_Realtors_ID)) AND ((@IsNull_RC_ID = 1 AND [RC_ID] IS NULL) OR ([RC_ID] = @Original_RC_ID)));
SELECT TR_ID, Flats_ID, Realtors_ID, RC_ID FROM Table_Realtors WHERE (TR_ID = @TR_ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Flats_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Flats_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Realtors_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Realtors_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@RC_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="RC_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TR_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TR_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Flats_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Flats_ID" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Flats_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Flats_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Realtors_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Realtors_ID" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Realtors_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Realtors_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_RC_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="RC_ID" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_RC_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="RC_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="TR_ID" ColumnName="TR_ID" DataSourceName="Residential_Complex.dbo.Table_Realtors" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@TR_ID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="TR_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="TR_ID" DataSetColumn="TR_ID" />
              <Mapping SourceColumn="Flats_ID" DataSetColumn="Flats_ID" />
              <Mapping SourceColumn="Realtors_ID" DataSetColumn="Realtors_ID" />
              <Mapping SourceColumn="RC_ID" DataSetColumn="RC_ID" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="Table_StatusTableAdapter" GeneratorDataComponentClassName="Table_StatusTableAdapter" Name="Table_Status" UserDataComponentName="Table_StatusTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="Residential_ComplexConnectionString (Settings)" DbObjectName="Residential_Complex.dbo.Table_Status" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Table_Status] WHERE (([TSTATUS_ID] = @Original_TSTATUS_ID) AND ((@IsNull_Flats_ID = 1 AND [Flats_ID] IS NULL) OR ([Flats_ID] = @Original_Flats_ID)) AND ((@IsNull_Status_ID = 1 AND [Status_ID] IS NULL) OR ([Status_ID] = @Original_Status_ID)) AND ((@IsNull_Start = 1 AND [Start] IS NULL) OR ([Start] = @Original_Start)) AND ((@IsNull_Finish = 1 AND [Finish] IS NULL) OR ([Finish] = @Original_Finish)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TSTATUS_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TSTATUS_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Flats_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Flats_ID" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Flats_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Flats_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Status_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Status_ID" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Status_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Status_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Start" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Start" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Original_Start" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="Start" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Finish" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Finish" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Original_Finish" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="Finish" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Table_Status] ([Flats_ID], [Status_ID], [Start], [Finish]) VALUES (@Flats_ID, @Status_ID, @Start, @Finish);
SELECT TSTATUS_ID, Flats_ID, Status_ID, Start, Finish FROM Table_Status WHERE (TSTATUS_ID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Flats_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Flats_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Status_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Status_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Start" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="Start" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Finish" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="Finish" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT TSTATUS_ID, Flats_ID, Status_ID, Start, Finish FROM dbo.Table_Status</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Table_Status] SET [Flats_ID] = @Flats_ID, [Status_ID] = @Status_ID, [Start] = @Start, [Finish] = @Finish WHERE (([TSTATUS_ID] = @Original_TSTATUS_ID) AND ((@IsNull_Flats_ID = 1 AND [Flats_ID] IS NULL) OR ([Flats_ID] = @Original_Flats_ID)) AND ((@IsNull_Status_ID = 1 AND [Status_ID] IS NULL) OR ([Status_ID] = @Original_Status_ID)) AND ((@IsNull_Start = 1 AND [Start] IS NULL) OR ([Start] = @Original_Start)) AND ((@IsNull_Finish = 1 AND [Finish] IS NULL) OR ([Finish] = @Original_Finish)));
SELECT TSTATUS_ID, Flats_ID, Status_ID, Start, Finish FROM Table_Status WHERE (TSTATUS_ID = @TSTATUS_ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Flats_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Flats_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Status_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Status_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Start" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="Start" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Finish" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="Finish" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TSTATUS_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TSTATUS_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Flats_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Flats_ID" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Flats_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Flats_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Status_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Status_ID" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Status_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Status_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Start" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Start" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Original_Start" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="Start" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Finish" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Finish" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Original_Finish" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="Finish" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="TSTATUS_ID" ColumnName="TSTATUS_ID" DataSourceName="Residential_Complex.dbo.Table_Status" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@TSTATUS_ID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="TSTATUS_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="TSTATUS_ID" DataSetColumn="TSTATUS_ID" />
              <Mapping SourceColumn="Flats_ID" DataSetColumn="Flats_ID" />
              <Mapping SourceColumn="Status_ID" DataSetColumn="Status_ID" />
              <Mapping SourceColumn="Start" DataSetColumn="Start" />
              <Mapping SourceColumn="Finish" DataSetColumn="Finish" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="DataTable1TableAdapter" GeneratorDataComponentClassName="DataTable1TableAdapter" Name="DataTable1" UserDataComponentName="DataTable1TableAdapter">
            <MainSource>
              <DbSource ConnectionRef="Residential_ComplexConnectionString (Settings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>Select Flats.Number, GK.Name, Flats.Square, Flats.Price, Flats.Floor From Flats INNER JOIN GK ON Flats.GK_ID = GK.GK_ID Where Flats.GK_ID = @gkid</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="gkid" ColumnName="GK_ID" DataSourceName="Residential_Complex.dbo.Flats" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@gkid" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="GK_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Number" DataSetColumn="Number" />
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
              <Mapping SourceColumn="Square" DataSetColumn="Square" />
              <Mapping SourceColumn="Price" DataSetColumn="Price" />
              <Mapping SourceColumn="Floor" DataSetColumn="Floor" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="Residential_ComplexConnectionString (Settings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="FillBy" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetDataBy" GeneratorSourceName="FillBy" GetMethodModifier="Public" GetMethodName="GetDataBy" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="FillBy">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>Select Flats.Number, GK.Name, Flats.Square, Flats.Price, Flats.Floor From Flats INNER JOIN GK ON Flats.GK_ID = GK.GK_ID Where Flats.Square BETWEEN @num1 and @num2</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="num1" ColumnName="Square" DataSourceName="Residential_Complex.dbo.Flats" DataTypeServer="float" DbType="Double" Direction="Input" ParameterName="@num1" Precision="0" ProviderType="Float" Scale="0" Size="8" SourceColumn="Square" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="num2" ColumnName="Square" DataSourceName="Residential_Complex.dbo.Flats" DataTypeServer="float" DbType="Double" Direction="Input" ParameterName="@num2" Precision="0" ProviderType="Float" Scale="0" Size="8" SourceColumn="Square" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="Residential_ComplexConnectionString (Settings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="FillBy1" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetDataBy1" GeneratorSourceName="FillBy1" GetMethodModifier="Public" GetMethodName="GetDataBy1" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="FillBy1">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>Select Flats.Number, GK.Name, Flats.Square, Flats.Price, Flats.Floor From Flats INNER JOIN GK ON Flats.GK_ID = GK.GK_ID Where Flats.Price BETWEEN @nu1 and @nu2</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="nu1" ColumnName="Price" DataSourceName="Residential_Complex.dbo.Flats" DataTypeServer="float" DbType="Double" Direction="Input" ParameterName="@nu1" Precision="0" ProviderType="Float" Scale="0" Size="8" SourceColumn="Price" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="nu2" ColumnName="Price" DataSourceName="Residential_Complex.dbo.Flats" DataTypeServer="float" DbType="Double" Direction="Input" ParameterName="@nu2" Precision="0" ProviderType="Float" Scale="0" Size="8" SourceColumn="Price" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="Residential_ComplexConnectionString (Settings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="FillBy2" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetDataBy2" GeneratorSourceName="FillBy2" GetMethodModifier="Public" GetMethodName="GetDataBy2" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy2" UserSourceName="FillBy2">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>Select Flats.Number, GK.Name, Flats.Square, Flats.Price, Flats.Floor From Flats INNER JOIN GK ON Flats.GK_ID = GK.GK_ID Where Flats.Floor = @floor</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="floor" ColumnName="Floor" DataSourceName="Residential_Complex.dbo.Flats" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@floor" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Floor" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="Realtors1TableAdapter" GeneratorDataComponentClassName="Realtors1TableAdapter" Name="Realtors1" UserDataComponentName="Realtors1TableAdapter">
            <MainSource>
              <DbSource ConnectionRef="Residential_ComplexConnectionString (Settings)" DbObjectName="Residential_Complex.dbo.Realtors" DbObjectType="Table" GenerateMethods="Get" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="GetData">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>Select Realtors.Name from Realtors INNER JOIN Table_Realtors ON Realtors.Realtors_ID = Table_Realtors.Realtors_ID INNER JOIN Flats ON Table_Realtors.Flats_ID = Flats.Flats_ID Where Flats.GK_ID = @gkid AND Flats.Floor = @floor</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="gkid" ColumnName="GK_ID" DataSourceName="Residential_Complex.dbo.Flats" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@gkid" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="GK_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="floor" ColumnName="Floor" DataSourceName="Residential_Complex.dbo.Flats" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@floor" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Floor" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="Realtors2TableAdapter" GeneratorDataComponentClassName="Realtors2TableAdapter" Name="Realtors2" UserDataComponentName="Realtors2TableAdapter">
            <MainSource>
              <DbSource ConnectionRef="Residential_ComplexConnectionString (Settings)" DbObjectName="Residential_Complex.dbo.Realtors" DbObjectType="Table" GenerateMethods="Get" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetData" UserSourceName="GetData">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT DISTINCT Realtors.Name
FROM            Realtors INNER JOIN
                         Table_Realtors ON Realtors.Realtors_ID = Table_Realtors.Realtors_ID INNER JOIN
                         Flats ON Table_Realtors.Flats_ID = Flats.Flats_ID
WHERE        (NOT EXISTS
                             (SELECT        TR_ID, Flats_ID, Realtors_ID, RC_ID
                               FROM            Table_Realtors AS Table_Realtors_3
                               WHERE        (Flats_ID IN
                                                             (SELECT        Flats_ID
                                                               FROM            Table_Realtors AS Table_Realtors_2
                                                               WHERE        (Realtors_ID = Realtors.Realtors_ID))) AND (Flats_ID NOT IN
                                                             (SELECT        Table_Realtors_1.Flats_ID
                                                               FROM            Table_Realtors AS Table_Realtors_1 INNER JOIN
                                                                                         Realtors AS Realtors_1 ON Table_Realtors_1.Realtors_ID = Realtors_1.Realtors_ID
                                                               WHERE        (Realtors_1.Realtors_ID = @rid) AND (Realtors.Name &lt;&gt; Realtors_1.Name)))))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="rid" ColumnName="" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@rid" Precision="0" Scale="0" Size="4" SourceColumn="" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="Residential_ComplexConnectionString (Settings)" DbObjectName="Residential_Complex.dbo.Realtors" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillBy" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetDataBy" GeneratorSourceName="FillBy" GetMethodModifier="Public" GetMethodName="GetDataBy" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="FillBy">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        Name
FROM            Realtors
WHERE        (NOT EXISTS
                             (SELECT        RC_ID
                               FROM            R_Company
                               WHERE        (NOT EXISTS
                                                             (SELECT        TR_ID, Flats_ID, Realtors_ID, RC_ID
                                                               FROM            Table_Realtors
                                                               WHERE        (Realtors_ID = Realtors.Realtors_ID) AND (RC_ID = R_Company.RC_ID)))))</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="Realtors3TableAdapter" GeneratorDataComponentClassName="Realtors3TableAdapter" Name="Realtors3" UserDataComponentName="Realtors3TableAdapter">
            <MainSource>
              <DbSource ConnectionRef="Residential_ComplexConnectionString (Settings)" DbObjectName="Residential_Complex.dbo.Realtors" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT DISTINCT Realtors.Name
FROM            Realtors INNER JOIN
                         Table_Realtors ON Realtors.Realtors_ID = Table_Realtors.Realtors_ID
WHERE        (Table_Realtors.RC_ID = @rc)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="rc" ColumnName="RC_ID" DataSourceName="Residential_Complex.dbo.Table_Realtors" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@rc" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="RC_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="Flats1TableAdapter" GeneratorDataComponentClassName="Flats1TableAdapter" Name="Flats1" UserDataComponentName="Flats1TableAdapter">
            <MainSource>
              <DbSource ConnectionRef="Residential_ComplexConnectionString (Settings)" DbObjectName="Residential_Complex.dbo.Flats" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT DISTINCT Flats.Number
FROM            Flats INNER JOIN
                         Table_Realtors ON Flats.Flats_ID = Table_Realtors.Flats_ID
WHERE        (Table_Realtors.Realtors_ID = @rid)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="rid" ColumnName="Realtors_ID" DataSourceName="Residential_Complex.dbo.Table_Realtors" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@rid" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Realtors_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Number" DataSetColumn="Number" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="Flats2TableAdapter" GeneratorDataComponentClassName="Flats2TableAdapter" Name="Flats2" UserDataComponentName="Flats2TableAdapter">
            <MainSource>
              <DbSource ConnectionRef="Residential_ComplexConnectionString (Settings)" DbObjectName="Residential_Complex.dbo.Flats" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT DISTINCT Flats.Number
FROM            Flats INNER JOIN
                         Table_Status ON Flats.Flats_ID = Table_Status.Flats_ID
WHERE        (Table_Status.Status_ID = @st)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="st" ColumnName="Status_ID" DataSourceName="Residential_Complex.dbo.Table_Status" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@st" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Status_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Number" DataSetColumn="Number" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="DataTable2TableAdapter" GeneratorDataComponentClassName="DataTable2TableAdapter" Name="DataTable2" UserDataComponentName="DataTable2TableAdapter">
            <MainSource>
              <DbSource ConnectionRef="Residential_ComplexConnectionString (Settings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        COUNT(Flats.Flats_ID) AS Expr1
FROM            Flats INNER JOIN
                         Table_Realtors ON Flats.Flats_ID = Table_Realtors.Flats_ID
WHERE        (Table_Realtors.Realtors_ID = @rid)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="rid" ColumnName="Realtors_ID" DataSourceName="Residential_Complex.dbo.Table_Realtors" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@rid" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Realtors_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Expr1" DataSetColumn="Expr1" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="Residential_ComplexDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="Residential_ComplexDataSet" msprop:Generator_UserDSName="Residential_ComplexDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Class" msprop:Generator_TableClassName="ClassDataTable" msprop:Generator_TableVarName="tableClass" msprop:Generator_RowChangedName="ClassRowChanged" msprop:Generator_TablePropName="Class" msprop:Generator_RowDeletingName="ClassRowDeleting" msprop:Generator_RowChangingName="ClassRowChanging" msprop:Generator_RowEvHandlerName="ClassRowChangeEventHandler" msprop:Generator_RowDeletedName="ClassRowDeleted" msprop:Generator_RowClassName="ClassRow" msprop:Generator_UserTableName="Class" msprop:Generator_RowEvArgName="ClassRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Class_ID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnClass_ID" msprop:Generator_ColumnPropNameInRow="Class_ID" msprop:Generator_ColumnPropNameInTable="Class_IDColumn" msprop:Generator_UserColumnName="Class_ID" type="xs:int" />
              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Flats" msprop:Generator_TableClassName="FlatsDataTable" msprop:Generator_TableVarName="tableFlats" msprop:Generator_RowChangedName="FlatsRowChanged" msprop:Generator_TablePropName="Flats" msprop:Generator_RowDeletingName="FlatsRowDeleting" msprop:Generator_RowChangingName="FlatsRowChanging" msprop:Generator_RowEvHandlerName="FlatsRowChangeEventHandler" msprop:Generator_RowDeletedName="FlatsRowDeleted" msprop:Generator_RowClassName="FlatsRow" msprop:Generator_UserTableName="Flats" msprop:Generator_RowEvArgName="FlatsRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Flats_ID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnFlats_ID" msprop:Generator_ColumnPropNameInRow="Flats_ID" msprop:Generator_ColumnPropNameInTable="Flats_IDColumn" msprop:Generator_UserColumnName="Flats_ID" type="xs:int" />
              <xs:element name="Number" msprop:Generator_ColumnVarNameInTable="columnNumber" msprop:Generator_ColumnPropNameInRow="Number" msprop:Generator_ColumnPropNameInTable="NumberColumn" msprop:Generator_UserColumnName="Number" type="xs:int" />
              <xs:element name="GK_ID" msprop:Generator_ColumnVarNameInTable="columnGK_ID" msprop:Generator_ColumnPropNameInRow="GK_ID" msprop:Generator_ColumnPropNameInTable="GK_IDColumn" msprop:Generator_UserColumnName="GK_ID" type="xs:int" minOccurs="0" />
              <xs:element name="Square" msprop:Generator_ColumnVarNameInTable="columnSquare" msprop:Generator_ColumnPropNameInRow="Square" msprop:Generator_ColumnPropNameInTable="SquareColumn" msprop:Generator_UserColumnName="Square" type="xs:double" />
              <xs:element name="Price" msprop:Generator_ColumnVarNameInTable="columnPrice" msprop:Generator_ColumnPropNameInRow="Price" msprop:Generator_ColumnPropNameInTable="PriceColumn" msprop:Generator_UserColumnName="Price" type="xs:double" />
              <xs:element name="Floor" msprop:Generator_ColumnVarNameInTable="columnFloor" msprop:Generator_ColumnPropNameInRow="Floor" msprop:Generator_ColumnPropNameInTable="FloorColumn" msprop:Generator_UserColumnName="Floor" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="GK" msprop:Generator_TableClassName="GKDataTable" msprop:Generator_TableVarName="tableGK" msprop:Generator_RowChangedName="GKRowChanged" msprop:Generator_TablePropName="GK" msprop:Generator_RowDeletingName="GKRowDeleting" msprop:Generator_RowChangingName="GKRowChanging" msprop:Generator_RowEvHandlerName="GKRowChangeEventHandler" msprop:Generator_RowDeletedName="GKRowDeleted" msprop:Generator_RowClassName="GKRow" msprop:Generator_UserTableName="GK" msprop:Generator_RowEvArgName="GKRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="GK_ID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnGK_ID" msprop:Generator_ColumnPropNameInRow="GK_ID" msprop:Generator_ColumnPropNameInTable="GK_IDColumn" msprop:Generator_UserColumnName="GK_ID" type="xs:int" />
              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Floors" msprop:Generator_ColumnVarNameInTable="columnFloors" msprop:Generator_ColumnPropNameInRow="Floors" msprop:Generator_ColumnPropNameInTable="FloorsColumn" msprop:Generator_UserColumnName="Floors" type="xs:int" />
              <xs:element name="Parking" msprop:Generator_ColumnVarNameInTable="columnParking" msprop:Generator_ColumnPropNameInRow="Parking" msprop:Generator_ColumnPropNameInTable="ParkingColumn" msprop:Generator_UserColumnName="Parking" type="xs:int" />
              <xs:element name="Address" msprop:Generator_ColumnVarNameInTable="columnAddress" msprop:Generator_ColumnPropNameInRow="Address" msprop:Generator_ColumnPropNameInTable="AddressColumn" msprop:Generator_UserColumnName="Address">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Class_ID" msprop:Generator_ColumnVarNameInTable="columnClass_ID" msprop:Generator_ColumnPropNameInRow="Class_ID" msprop:Generator_ColumnPropNameInTable="Class_IDColumn" msprop:Generator_UserColumnName="Class_ID" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Owners" msprop:Generator_TableClassName="OwnersDataTable" msprop:Generator_TableVarName="tableOwners" msprop:Generator_RowChangedName="OwnersRowChanged" msprop:Generator_TablePropName="Owners" msprop:Generator_RowDeletingName="OwnersRowDeleting" msprop:Generator_RowChangingName="OwnersRowChanging" msprop:Generator_RowEvHandlerName="OwnersRowChangeEventHandler" msprop:Generator_RowDeletedName="OwnersRowDeleted" msprop:Generator_RowClassName="OwnersRow" msprop:Generator_UserTableName="Owners" msprop:Generator_RowEvArgName="OwnersRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Owners_ID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnOwners_ID" msprop:Generator_ColumnPropNameInRow="Owners_ID" msprop:Generator_ColumnPropNameInTable="Owners_IDColumn" msprop:Generator_UserColumnName="Owners_ID" type="xs:int" />
              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Phone" msprop:Generator_ColumnVarNameInTable="columnPhone" msprop:Generator_ColumnPropNameInRow="Phone" msprop:Generator_ColumnPropNameInTable="PhoneColumn" msprop:Generator_UserColumnName="Phone">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="R_Company" msprop:Generator_TableClassName="R_CompanyDataTable" msprop:Generator_TableVarName="tableR_Company" msprop:Generator_RowChangedName="R_CompanyRowChanged" msprop:Generator_TablePropName="R_Company" msprop:Generator_RowDeletingName="R_CompanyRowDeleting" msprop:Generator_RowChangingName="R_CompanyRowChanging" msprop:Generator_RowEvHandlerName="R_CompanyRowChangeEventHandler" msprop:Generator_RowDeletedName="R_CompanyRowDeleted" msprop:Generator_RowClassName="R_CompanyRow" msprop:Generator_UserTableName="R_Company" msprop:Generator_RowEvArgName="R_CompanyRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="RC_ID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnRC_ID" msprop:Generator_ColumnPropNameInRow="RC_ID" msprop:Generator_ColumnPropNameInTable="RC_IDColumn" msprop:Generator_UserColumnName="RC_ID" type="xs:int" />
              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Director" msprop:Generator_ColumnVarNameInTable="columnDirector" msprop:Generator_ColumnPropNameInRow="Director" msprop:Generator_ColumnPropNameInTable="DirectorColumn" msprop:Generator_UserColumnName="Director">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Staff" msprop:Generator_ColumnVarNameInTable="columnStaff" msprop:Generator_ColumnPropNameInRow="Staff" msprop:Generator_ColumnPropNameInTable="StaffColumn" msprop:Generator_UserColumnName="Staff" type="xs:int" />
              <xs:element name="Phone" msprop:Generator_ColumnVarNameInTable="columnPhone" msprop:Generator_ColumnPropNameInRow="Phone" msprop:Generator_ColumnPropNameInTable="PhoneColumn" msprop:Generator_UserColumnName="Phone">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Realtors" msprop:Generator_TableClassName="RealtorsDataTable" msprop:Generator_TableVarName="tableRealtors" msprop:Generator_RowChangedName="RealtorsRowChanged" msprop:Generator_TablePropName="Realtors" msprop:Generator_RowDeletingName="RealtorsRowDeleting" msprop:Generator_RowChangingName="RealtorsRowChanging" msprop:Generator_RowEvHandlerName="RealtorsRowChangeEventHandler" msprop:Generator_RowDeletedName="RealtorsRowDeleted" msprop:Generator_RowClassName="RealtorsRow" msprop:Generator_UserTableName="Realtors" msprop:Generator_RowEvArgName="RealtorsRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Realtors_ID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnRealtors_ID" msprop:Generator_ColumnPropNameInRow="Realtors_ID" msprop:Generator_ColumnPropNameInTable="Realtors_IDColumn" msprop:Generator_UserColumnName="Realtors_ID" type="xs:int" />
              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Phone" msprop:Generator_ColumnVarNameInTable="columnPhone" msprop:Generator_ColumnPropNameInRow="Phone" msprop:Generator_ColumnPropNameInTable="PhoneColumn" msprop:Generator_UserColumnName="Phone">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Status" msprop:Generator_TableClassName="StatusDataTable" msprop:Generator_TableVarName="tableStatus" msprop:Generator_RowChangedName="StatusRowChanged" msprop:Generator_TablePropName="Status" msprop:Generator_RowDeletingName="StatusRowDeleting" msprop:Generator_RowChangingName="StatusRowChanging" msprop:Generator_RowEvHandlerName="StatusRowChangeEventHandler" msprop:Generator_RowDeletedName="StatusRowDeleted" msprop:Generator_RowClassName="StatusRow" msprop:Generator_UserTableName="Status" msprop:Generator_RowEvArgName="StatusRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Status_ID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnStatus_ID" msprop:Generator_ColumnPropNameInRow="Status_ID" msprop:Generator_ColumnPropNameInTable="Status_IDColumn" msprop:Generator_UserColumnName="Status_ID" type="xs:int" />
              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Table_Realtors" msprop:Generator_TableClassName="Table_RealtorsDataTable" msprop:Generator_TableVarName="tableTable_Realtors" msprop:Generator_RowChangedName="Table_RealtorsRowChanged" msprop:Generator_TablePropName="Table_Realtors" msprop:Generator_RowDeletingName="Table_RealtorsRowDeleting" msprop:Generator_RowChangingName="Table_RealtorsRowChanging" msprop:Generator_RowEvHandlerName="Table_RealtorsRowChangeEventHandler" msprop:Generator_RowDeletedName="Table_RealtorsRowDeleted" msprop:Generator_RowClassName="Table_RealtorsRow" msprop:Generator_UserTableName="Table_Realtors" msprop:Generator_RowEvArgName="Table_RealtorsRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="TR_ID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnTR_ID" msprop:Generator_ColumnPropNameInRow="TR_ID" msprop:Generator_ColumnPropNameInTable="TR_IDColumn" msprop:Generator_UserColumnName="TR_ID" type="xs:int" />
              <xs:element name="Flats_ID" msprop:Generator_ColumnVarNameInTable="columnFlats_ID" msprop:Generator_ColumnPropNameInRow="Flats_ID" msprop:Generator_ColumnPropNameInTable="Flats_IDColumn" msprop:Generator_UserColumnName="Flats_ID" type="xs:int" minOccurs="0" />
              <xs:element name="Realtors_ID" msprop:Generator_ColumnVarNameInTable="columnRealtors_ID" msprop:Generator_ColumnPropNameInRow="Realtors_ID" msprop:Generator_ColumnPropNameInTable="Realtors_IDColumn" msprop:Generator_UserColumnName="Realtors_ID" type="xs:int" minOccurs="0" />
              <xs:element name="RC_ID" msprop:Generator_ColumnVarNameInTable="columnRC_ID" msprop:Generator_ColumnPropNameInRow="RC_ID" msprop:Generator_ColumnPropNameInTable="RC_IDColumn" msprop:Generator_UserColumnName="RC_ID" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Table_Status" msprop:Generator_TableClassName="Table_StatusDataTable" msprop:Generator_TableVarName="tableTable_Status" msprop:Generator_RowChangedName="Table_StatusRowChanged" msprop:Generator_TablePropName="Table_Status" msprop:Generator_RowDeletingName="Table_StatusRowDeleting" msprop:Generator_RowChangingName="Table_StatusRowChanging" msprop:Generator_RowEvHandlerName="Table_StatusRowChangeEventHandler" msprop:Generator_RowDeletedName="Table_StatusRowDeleted" msprop:Generator_RowClassName="Table_StatusRow" msprop:Generator_UserTableName="Table_Status" msprop:Generator_RowEvArgName="Table_StatusRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="TSTATUS_ID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnTSTATUS_ID" msprop:Generator_ColumnPropNameInRow="TSTATUS_ID" msprop:Generator_ColumnPropNameInTable="TSTATUS_IDColumn" msprop:Generator_UserColumnName="TSTATUS_ID" type="xs:int" />
              <xs:element name="Flats_ID" msprop:Generator_ColumnVarNameInTable="columnFlats_ID" msprop:Generator_ColumnPropNameInRow="Flats_ID" msprop:Generator_ColumnPropNameInTable="Flats_IDColumn" msprop:Generator_UserColumnName="Flats_ID" type="xs:int" minOccurs="0" />
              <xs:element name="Status_ID" msprop:Generator_ColumnVarNameInTable="columnStatus_ID" msprop:Generator_ColumnPropNameInRow="Status_ID" msprop:Generator_ColumnPropNameInTable="Status_IDColumn" msprop:Generator_UserColumnName="Status_ID" type="xs:int" minOccurs="0" />
              <xs:element name="Start" msprop:Generator_ColumnVarNameInTable="columnStart" msprop:Generator_ColumnPropNameInRow="Start" msprop:Generator_ColumnPropNameInTable="StartColumn" msprop:Generator_UserColumnName="Start" type="xs:dateTime" minOccurs="0" />
              <xs:element name="Finish" msprop:Generator_ColumnVarNameInTable="columnFinish" msprop:Generator_ColumnPropNameInRow="Finish" msprop:Generator_ColumnPropNameInTable="FinishColumn" msprop:Generator_UserColumnName="Finish" type="xs:dateTime" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="DataTable1" msprop:Generator_TableClassName="DataTable1DataTable" msprop:Generator_TableVarName="tableDataTable1" msprop:Generator_TablePropName="DataTable1" msprop:Generator_RowDeletingName="DataTable1RowDeleting" msprop:Generator_RowChangingName="DataTable1RowChanging" msprop:Generator_RowEvHandlerName="DataTable1RowChangeEventHandler" msprop:Generator_RowDeletedName="DataTable1RowDeleted" msprop:Generator_UserTableName="DataTable1" msprop:Generator_RowChangedName="DataTable1RowChanged" msprop:Generator_RowEvArgName="DataTable1RowChangeEvent" msprop:Generator_RowClassName="DataTable1Row">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Number" msprop:Generator_ColumnVarNameInTable="columnNumber" msprop:Generator_ColumnPropNameInRow="Number" msprop:Generator_ColumnPropNameInTable="NumberColumn" msprop:Generator_UserColumnName="Number" type="xs:int" />
              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Square" msprop:Generator_ColumnVarNameInTable="columnSquare" msprop:Generator_ColumnPropNameInRow="Square" msprop:Generator_ColumnPropNameInTable="SquareColumn" msprop:Generator_UserColumnName="Square" type="xs:double" />
              <xs:element name="Price" msprop:Generator_ColumnVarNameInTable="columnPrice" msprop:Generator_ColumnPropNameInRow="Price" msprop:Generator_ColumnPropNameInTable="PriceColumn" msprop:Generator_UserColumnName="Price" type="xs:double" />
              <xs:element name="Floor" msprop:Generator_ColumnVarNameInTable="columnFloor" msprop:Generator_ColumnPropNameInRow="Floor" msprop:Generator_ColumnPropNameInTable="FloorColumn" msprop:Generator_UserColumnName="Floor" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Realtors1" msprop:Generator_TableClassName="Realtors1DataTable" msprop:Generator_TableVarName="tableRealtors1" msprop:Generator_TablePropName="Realtors1" msprop:Generator_RowDeletingName="Realtors1RowDeleting" msprop:Generator_RowChangingName="Realtors1RowChanging" msprop:Generator_RowEvHandlerName="Realtors1RowChangeEventHandler" msprop:Generator_RowDeletedName="Realtors1RowDeleted" msprop:Generator_UserTableName="Realtors1" msprop:Generator_RowChangedName="Realtors1RowChanged" msprop:Generator_RowEvArgName="Realtors1RowChangeEvent" msprop:Generator_RowClassName="Realtors1Row">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Realtors2" msprop:Generator_TableClassName="Realtors2DataTable" msprop:Generator_TableVarName="tableRealtors2" msprop:Generator_TablePropName="Realtors2" msprop:Generator_RowDeletingName="Realtors2RowDeleting" msprop:Generator_RowChangingName="Realtors2RowChanging" msprop:Generator_RowEvHandlerName="Realtors2RowChangeEventHandler" msprop:Generator_RowDeletedName="Realtors2RowDeleted" msprop:Generator_UserTableName="Realtors2" msprop:Generator_RowChangedName="Realtors2RowChanged" msprop:Generator_RowEvArgName="Realtors2RowChangeEvent" msprop:Generator_RowClassName="Realtors2Row">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Realtors3" msprop:Generator_TableClassName="Realtors3DataTable" msprop:Generator_TableVarName="tableRealtors3" msprop:Generator_TablePropName="Realtors3" msprop:Generator_RowDeletingName="Realtors3RowDeleting" msprop:Generator_RowChangingName="Realtors3RowChanging" msprop:Generator_RowEvHandlerName="Realtors3RowChangeEventHandler" msprop:Generator_RowDeletedName="Realtors3RowDeleted" msprop:Generator_UserTableName="Realtors3" msprop:Generator_RowChangedName="Realtors3RowChanged" msprop:Generator_RowEvArgName="Realtors3RowChangeEvent" msprop:Generator_RowClassName="Realtors3Row">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Flats1" msprop:Generator_TableClassName="Flats1DataTable" msprop:Generator_TableVarName="tableFlats1" msprop:Generator_TablePropName="Flats1" msprop:Generator_RowDeletingName="Flats1RowDeleting" msprop:Generator_RowChangingName="Flats1RowChanging" msprop:Generator_RowEvHandlerName="Flats1RowChangeEventHandler" msprop:Generator_RowDeletedName="Flats1RowDeleted" msprop:Generator_UserTableName="Flats1" msprop:Generator_RowChangedName="Flats1RowChanged" msprop:Generator_RowEvArgName="Flats1RowChangeEvent" msprop:Generator_RowClassName="Flats1Row">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Number" msprop:Generator_ColumnVarNameInTable="columnNumber" msprop:Generator_ColumnPropNameInRow="Number" msprop:Generator_ColumnPropNameInTable="NumberColumn" msprop:Generator_UserColumnName="Number" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Flats2" msprop:Generator_TableClassName="Flats2DataTable" msprop:Generator_TableVarName="tableFlats2" msprop:Generator_TablePropName="Flats2" msprop:Generator_RowDeletingName="Flats2RowDeleting" msprop:Generator_RowChangingName="Flats2RowChanging" msprop:Generator_RowEvHandlerName="Flats2RowChangeEventHandler" msprop:Generator_RowDeletedName="Flats2RowDeleted" msprop:Generator_UserTableName="Flats2" msprop:Generator_RowChangedName="Flats2RowChanged" msprop:Generator_RowEvArgName="Flats2RowChangeEvent" msprop:Generator_RowClassName="Flats2Row">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Number" msprop:Generator_ColumnVarNameInTable="columnNumber" msprop:Generator_ColumnPropNameInRow="Number" msprop:Generator_ColumnPropNameInTable="NumberColumn" msprop:Generator_UserColumnName="Number" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="DataTable2" msprop:Generator_TableClassName="DataTable2DataTable" msprop:Generator_TableVarName="tableDataTable2" msprop:Generator_TablePropName="DataTable2" msprop:Generator_RowDeletingName="DataTable2RowDeleting" msprop:Generator_RowChangingName="DataTable2RowChanging" msprop:Generator_RowEvHandlerName="DataTable2RowChangeEventHandler" msprop:Generator_RowDeletedName="DataTable2RowDeleted" msprop:Generator_UserTableName="DataTable2" msprop:Generator_RowChangedName="DataTable2RowChanged" msprop:Generator_RowEvArgName="DataTable2RowChangeEvent" msprop:Generator_RowClassName="DataTable2Row">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Expr1" msdata:ReadOnly="true" msprop:Generator_ColumnVarNameInTable="columnExpr1" msprop:Generator_ColumnPropNameInRow="Expr1" msprop:Generator_ColumnPropNameInTable="Expr1Column" msprop:Generator_UserColumnName="Expr1" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Class" />
      <xs:field xpath="mstns:Class_ID" />
    </xs:unique>
    <xs:unique name="Flats_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Flats" />
      <xs:field xpath="mstns:Flats_ID" />
    </xs:unique>
    <xs:unique name="GK_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:GK" />
      <xs:field xpath="mstns:GK_ID" />
    </xs:unique>
    <xs:unique name="Owners_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Owners" />
      <xs:field xpath="mstns:Owners_ID" />
    </xs:unique>
    <xs:unique name="R_Company_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:R_Company" />
      <xs:field xpath="mstns:RC_ID" />
    </xs:unique>
    <xs:unique name="Realtors_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Realtors" />
      <xs:field xpath="mstns:Realtors_ID" />
    </xs:unique>
    <xs:unique name="Status_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Status" />
      <xs:field xpath="mstns:Status_ID" />
    </xs:unique>
    <xs:unique name="Table_Realtors_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Table_Realtors" />
      <xs:field xpath="mstns:TR_ID" />
    </xs:unique>
    <xs:unique name="Table_Status_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Table_Status" />
      <xs:field xpath="mstns:TSTATUS_ID" />
    </xs:unique>
    <xs:unique name="Realtors1Key1">
      <xs:selector xpath=".//mstns:Realtors1" />
      <xs:field xpath="mstns:Name" />
    </xs:unique>
    <xs:unique name="Realtors2Key1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Realtors2" />
      <xs:field xpath="mstns:Name" />
    </xs:unique>
    <xs:unique name="Realtors3Key1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Realtors3" />
      <xs:field xpath="mstns:Name" />
    </xs:unique>
    <xs:unique name="Flats1Key1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Flats1" />
      <xs:field xpath="mstns:Number" />
    </xs:unique>
    <xs:unique name="Flats2Key1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Flats2" />
      <xs:field xpath="mstns:Number" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FK_Flats_GK" msdata:parent="GK" msdata:child="Flats" msdata:parentkey="GK_ID" msdata:childkey="GK_ID" msprop:Generator_UserChildTable="Flats" msprop:Generator_ChildPropName="GetFlatsRows" msprop:Generator_UserRelationName="FK_Flats_GK" msprop:Generator_ParentPropName="GKRow" msprop:Generator_RelationVarName="relationFK_Flats_GK" msprop:Generator_UserParentTable="GK" />
      <msdata:Relationship name="FK_Flats_Owners" msdata:parent="Owners" msdata:child="Flats" msdata:parentkey="Owners_ID" msdata:childkey="Flats_ID" msprop:Generator_UserChildTable="Flats" msprop:Generator_ChildPropName="GetFlatsRows" msprop:Generator_UserRelationName="FK_Flats_Owners" msprop:Generator_ParentPropName="OwnersRow" msprop:Generator_RelationVarName="relationFK_Flats_Owners" msprop:Generator_UserParentTable="Owners" />
      <msdata:Relationship name="FK_GK_Class" msdata:parent="Class" msdata:child="GK" msdata:parentkey="Class_ID" msdata:childkey="Class_ID" msprop:Generator_UserChildTable="GK" msprop:Generator_ChildPropName="GetGKRows" msprop:Generator_UserRelationName="FK_GK_Class" msprop:Generator_RelationVarName="relationFK_GK_Class" msprop:Generator_UserParentTable="Class" msprop:Generator_ParentPropName="ClassRow" />
      <msdata:Relationship name="FK_Table_Realtors_Flats" msdata:parent="Flats" msdata:child="Table_Realtors" msdata:parentkey="Flats_ID" msdata:childkey="Flats_ID" msprop:Generator_UserChildTable="Table_Realtors" msprop:Generator_ChildPropName="GetTable_RealtorsRows" msprop:Generator_UserRelationName="FK_Table_Realtors_Flats" msprop:Generator_RelationVarName="relationFK_Table_Realtors_Flats" msprop:Generator_UserParentTable="Flats" msprop:Generator_ParentPropName="FlatsRow" />
      <msdata:Relationship name="FK_Table_Realtors_R_Company" msdata:parent="R_Company" msdata:child="Table_Realtors" msdata:parentkey="RC_ID" msdata:childkey="RC_ID" msprop:Generator_UserChildTable="Table_Realtors" msprop:Generator_ChildPropName="GetTable_RealtorsRows" msprop:Generator_UserRelationName="FK_Table_Realtors_R_Company" msprop:Generator_RelationVarName="relationFK_Table_Realtors_R_Company" msprop:Generator_UserParentTable="R_Company" msprop:Generator_ParentPropName="R_CompanyRow" />
      <msdata:Relationship name="FK_Table_Realtors_Realtors" msdata:parent="Realtors" msdata:child="Table_Realtors" msdata:parentkey="Realtors_ID" msdata:childkey="Realtors_ID" msprop:Generator_UserChildTable="Table_Realtors" msprop:Generator_ChildPropName="GetTable_RealtorsRows" msprop:Generator_UserRelationName="FK_Table_Realtors_Realtors" msprop:Generator_RelationVarName="relationFK_Table_Realtors_Realtors" msprop:Generator_UserParentTable="Realtors" msprop:Generator_ParentPropName="RealtorsRow" />
      <msdata:Relationship name="FK_Table_Status_Flats" msdata:parent="Flats" msdata:child="Table_Status" msdata:parentkey="Flats_ID" msdata:childkey="Flats_ID" msprop:Generator_UserChildTable="Table_Status" msprop:Generator_ChildPropName="GetTable_StatusRows" msprop:Generator_UserRelationName="FK_Table_Status_Flats" msprop:Generator_RelationVarName="relationFK_Table_Status_Flats" msprop:Generator_UserParentTable="Flats" msprop:Generator_ParentPropName="FlatsRow" />
      <msdata:Relationship name="FK_Table_Status_Status" msdata:parent="Status" msdata:child="Table_Status" msdata:parentkey="Status_ID" msdata:childkey="Status_ID" msprop:Generator_UserChildTable="Table_Status" msprop:Generator_ChildPropName="GetTable_StatusRows" msprop:Generator_UserRelationName="FK_Table_Status_Status" msprop:Generator_RelationVarName="relationFK_Table_Status_Status" msprop:Generator_UserParentTable="Status" msprop:Generator_ParentPropName="StatusRow" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>